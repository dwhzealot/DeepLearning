import numpy as np

class SigmoidActivator(object):
    def forward(self, weighted_input):
        return 1.0 / (1.0 + np.exp(-weighted_input))
    def backward(self, output):
        return output * (1 - output)

class TanhActivator(object):
    def forward(self, input):
        return (np.exp(input) - np.exp(-input)) / (np.exp(input) + np.exp(-input))
    def backward(self, output):
        return (1 -np.square(output))
